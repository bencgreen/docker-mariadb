#!/usr/bin/with-contenv bash

#======================================================================================================================
# Copyright (c) 2015 Thomas Boerger <https://webhippie.de>
# Originally from https://github.com/dockhippie/mariadb/blob/master/latest/overlay/etc/s6/mariadb/run
#
# Modifications copyright (c) 2021 Ben Green <https://bcgdesign.com>
#======================================================================================================================

# Create database table and grant privilegs to user
#   1: path to init file
#   2: database name
#   3: username
#   4: password
create () {
    echo "CREATE DATABASE IF NOT EXISTS \`${2}\`;" >> ${1}
    echo "GRANT ALL PRIVILEGES ON \`${2}\`.* TO '${3}'@'%' IDENTIFIED BY '${4}';" >> ${1}
}

# if the directory does not exist, the server needs to be initialised
if [ ! -d "/var/lib/mysql/mysql" ] ; then

    # disable database upgrade
    _echo "First run detected"
    db-upgrade-disable

    # check for root password
    if [ -z "${MARIADB_ROOT_PASSWORD}" ] ; then
        _error "Database is uninitialized and MARIADB_ROOT_PASSWORD is not set."
        _terminate
        exit 1
    fi

    # run base install
    _echo "Running mariadb-install-db..."
    mariadb-install-db --user=mysql --datadir="/var/lib/mysql"
    _done

    # create temporary init file
    INIT_FILE="/tmp/mariadb-boot.sql"
    _echo "Generating initialisation file ${INIT_FILE}..."

    # update root user with password and ensure full access
    _echo " .. alter root user"
    echo "" >| ${INIT_FILE}
    echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MARIADB_ROOT_PASSWORD}';" >> ${INIT_FILE}
    echo "GRANT ALL ON *.* TO 'root'@'localhost WITH GRANT OPTION;" >> ${INIT_FILE}
    echo "DROP DATABASE IF EXISTS \`test\`;" >> ${INIT_FILE}
    echo "FLUSH PRIVILEGES;" >> ${INIT_FILE}

    # if a user is specified, add application database
    if [[ -n "${MARIADB_USERNAME}" && -n "${MARIADB_PASSWORD}" ]] ; then

        # if database(s) specified, create (each) database and grant user permissions
        if [ -n "${MARIADB_DATABASE}" ] ; then

            _echo " .. add application databases: ${MARIADB_DATABASE}"            
            DATABASES=$(echo ${MARIADB_DATABASE} | tr "," "\n")

            for DATABASE in ${DATABASES} ; do
                create "${INIT_FILE}" "${DATABASE}" "${MARIADB_USERNAME}" "${MARIADB_PASSWORD}"
            done

        # no database specified so use username as database name
        else

            _echo " .. add application database: ${MARIADB_USERNAME}"
            create "${INIT_FILE}" "${MARIADB_USERNAME}" "${MARIADB_USERNAME}" "${MARIADB_PASSWORD}"

        fi

        # flush privileges to load new user permissions
        echo "FLUSH PRIVILEGES;" >> ${INIT_FILE}

    else

        _echo "MARIADB_USERNAME and MARIADB_PASSWORD not set."

    fi
    
    _done

    # start database with temporary init file
    _echo "Starting mariadbd-safe with init file"
    mariadbd-safe --init-file=${INIT_FILE}

else

    # start database
    _echo "Starting mariadbd-safe"
    mariadbd-safe

fi
