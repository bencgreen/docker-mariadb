#!/usr/bin/with-contenv bash

set -euo pipefail


#======================================================================================================================
# Generate key and certificate.
#
# Arguments
#   1   Certificate name (e.g. 'Server' or 'Client')
#   2   Path to key
#   3   Key bits
#   4   Path to certificate
#======================================================================================================================

generate-request() {
    openssl req
        -nodes \
        -keyout ${2} \
        -newkey rsa:${3} \
        -out ${4} \
        -subj "/C=NA/ST=NA/L=NA/O=NA/OU=NA/CN=MariaDB ${1}"
}


#======================================================================================================================
# Process RSA key.
#
# Arguments
#   1   Path to input key
#   2   Path to output key
#======================================================================================================================

process-key() {
    openssl rsa \
        -in ${1} \
        -out ${2}
    rm -f "${1}"
}


#======================================================================================================================
# Sign a certificate using the generated authority.
#
# Arguments
#   1   Path to certificate request
#   2   Path to certificate
#======================================================================================================================

sign-cert() {
    openssl x509 \
        -req \
        -days ${SSL_DAYS:-3650} \
        -in ${1} \
        -CA ${CA_CERT} \
        -CAkey ${CA_KEY} \
        -set_serial 01 \
        -out ${2}
    rm -f "${1}"
}


#======================================================================================================================
# For the commands and the following sequence of commands,
# see https://www.cyberciti.biz/faq/how-to-setup-mariadb-ssl-and-secure-connections-from-clients/
#======================================================================================================================


#======================================================================================================================
# Generate CA key and certificate
#======================================================================================================================

# generate CA key
bcg-echo "Generating CA key ${CA_KEY}..."
openssl genrsa ${SSL_CA_KEY_BITS:-4096} > ${CA_KEY}
bcg-done

# generate CA certificate
bcg-echo "Generating CA certificate ${CA_CERT}..."
openssl req \
    -x509 \
    -nodes \
    -days ${SSL_DAYS:-3650} \
    -key ${CA_KEY} \
    -out ${CA_CERT} \
    -subj "/C=NA/ST=NA/L=NA/O=NA/OU=NA/CN=MariaDB Admin"
bcg-done


#======================================================================================================================
# Generate server key and certificate
#======================================================================================================================

# generate server key and request
bcg-echo "Generating server key and request..."
generate-request "Server" ${SERVER_KEY_TMP} ${SSL_SERVER_KEY_BITS:-4096} ${SERVER_REQ}
bcg-done

# process server key
bcg-echo "Processing server key ${SERVER_KEY}..."
process-key ${SERVER_KEY_TMP} ${SERVER_KEY}
bcg-done

# sign the server certificate
bcg-echo "Signing server certificate ${SERVER_CERT}..."
sign-cert ${SERVER_REQ} ${SERVER_CERT}
bcg-done


#======================================================================================================================
# Generate client key and certificate
#======================================================================================================================

# generate client key and request
bcg-echo "Generating client key and request..."
generate-request "Client" ${CLIENT_KEY_TMP} ${SSL_CLIENT_KEY_BITS:-4096} ${CLIENT_REQ}
bcg-done

# process client key
bcg-echo "Processing client key ${CLIENT_KEY}..."
process-key ${CLIENT_KEY_TMP} ${CLIENT_KEY}
bcg-done

# sign the server certificate
bcg-echo "Signing client certificate ${CLIENT_CERT}..."
sign-cert ${CLIENT_REQ} ${CLIENT_CERT}
bcg-done


#======================================================================================================================
# Verify client and server certificates
#======================================================================================================================

bcg-echo "Verifying certificates..."
if [ openssl verify -CAfile ${CA_CERT} ${SERVER_CERT} ${CLIENT_CERT} ] ; then
    bcg-done
else
    #bcg-rmrf "${SSL}/*"
    bcg-error "Unable to verify SSL certificates."
fi
